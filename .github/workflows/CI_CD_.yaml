name: Combined WorkedFlow

on:
  push:
    branches:
      - main

jobs:

  Front-Ci-CD:
      name: Angular CI/CD
      runs-on: ubuntu-latest
      
      defaults:
        run:
          working-directory: 'front'
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
  
        - name: Use Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 18
  
        - name: Install dependencies
          run: |
                  npm install
  
        - name: Run tests
          run: |
                  npm run test
                  
        - name: Run Build
          run: |
                  npm run build
  
        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          with:
            args: >
              -Dsonar.organization=osiris1004
              -Dsonar.projectKey=osiris1004_OC-Project-10
              -Dsonar.sources=front/src
              -Dsonar.tests=front/src
              -Dsonar.typescript.lcov.reportPaths=front/coverage/bobapp/lcov.info
              -Dsonar.ts.tslintconfigpath=tslint.json
              -Dsonar.exclusions=front/**/node_modules/**,**/assets/**,**/*.spec.ts
              -Dsonar.test.inclusions=front/**/*.spec.ts
  
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets. SONARCLOUD_TOKEN }}
            
  
        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
  
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
  
        - name: remove node_modules to avoid docker build error
          run : |
                  rm -r node_modules
  
        - name: Build and push
          uses: docker/build-push-action@v4
          with:
              context: ./front
              file: ./front/Dockerfile
              push: true
              tags: ${{ secrets.DOCKERHUB_USERNAME }}/oc-project-10-front-end:latest





  Back-CI-CD:
    name: Spring-Boot CI/CD
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: 'back'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build with Maven
        run: mvn clean install --file pom.xml

      - name: Build Spring Boot JAR
        run: |
          mvn clean package

      - name: Run Test With Maven
        run: |
          mvn clean test

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets. SONARCLOUD_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=osiris1004_OC-Project-10



      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image (back)
        uses: docker/build-push-action@v4
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/oc-project-10-back-end:latest
